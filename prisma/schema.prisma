// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int                @id @default(autoincrement())
  firstName    String
  email        String
  password     String
  botSettings  UserBotSettings[]
  appointments Appointment[]
  services     Services[]
  availability HourAvailability[]
  hours        Hour[]
}

model UserBotSettings {
  id       Int    @id @default(autoincrement())
  botToken String
  botName  String
  address  String
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
}

model Client {
  id           Int           @id @default(autoincrement())
  telegramId   String        @unique
  name         String
  appointments Appointment[] // Клиент может иметь множество записей на прием
}

model Appointment {
  id          Int      @id @default(autoincrement())
  month       String
  day         Int
  hour        Int
  client      Client   @relation(fields: [clientId], references: [id]) // Связь с клиентом по ID
  clientId    Int // ID клиента
  clientName  String
  service     Services @relation(fields: [serviceId], references: [id]) // Связь с услугой по ID
  serviceId   Int // ID услуги
  serviceName String
  duration    Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}

model Services {
  id           Int           @id @default(autoincrement())
  name         String
  description  String
  price        Int
  duration     Int // Длительность услуги
  appointments Appointment[]
  user         User          @relation(fields: [userId], references: [id])
  userId       Int
}

// Определение модели доступности часов
model HourAvailability {
  id     Int      @id @default(autoincrement())
  date   DateTime @unique
  hours  Hour[] // Связь с моделью часов
  User   User     @relation(fields: [userId], references: [id])
  userId Int
}

// Определение модели часа
model Hour {
  id             Int              @id @default(autoincrement())
  hour           Int
  isAvailable    Boolean
  availability   HourAvailability @relation(fields: [availabilityId], references: [id])
  availabilityId Int
  User           User             @relation(fields: [userId], references: [id])
  userId         Int
}
